{"version":3,"sources":["App.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.module.css","components/contactList/ContactList.jsx","components/filter/Filter.jsx","components/contactForm/ContactForm.jsx","App.js","index.js","components/contactList/ContactList.module.css"],"names":["module","exports","ContactList","data","deleteContact","className","s","map","id","name","number","ContactListItem","ContactListSpan","btnDelete","type","onClick","Filter","value","changeFilter","seacrhInput","placeholder","onChange","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","target","console","log","preventDefault","contactsForm","label","input","autoComplete","pattern","title","required","contactsFormBtn","App","contacts","setContacts","filters","setFilters","useEffect","localStorage","setItem","JSON","stringify","contactsForParcing","getItem","parsedContacts","parse","mainDiv","some","contact","toLowerCase","toast","warn","transition","Bounce","shortid","generate","prevState","success","Flip","currentTarget","filter","includes","idContacts","autoClose","Zoom","configure","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25318ece.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"App_mainDiv__2WRK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seacrhInput\":\"Filter_seacrhInput__3I0pO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__1pMwp\",\"label\":\"ContactForm_label__2UO_k\",\"input\":\"ContactForm_input__1C0_X\",\"contactsFormBtn\":\"ContactForm_contactsFormBtn__2QdBl\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\n\r\nfunction ContactList({ data, deleteContact}) {\r\n    return (\r\n        <ul className={s.ContactList}>\r\n            {data.map(({id, name, number}) => {\r\n                return (\r\n                    <li key={id} className={s.ContactListItem}>\r\n                        <span className={s.ContactListSpan}>{name}</span>\r\n                        <span className={s.ContactListSpan}>{number}</span>\r\n                        <button key={id}\r\n                            className={s.btnDelete}\r\n                            type=\"button\" onClick={() => deleteContact(id)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                   \r\n                )\r\n            })}\r\n         </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n}; \r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css'\r\n\r\nfunction Filter({value, changeFilter}) {\r\n    return (\r\n         <label>\r\n        Find contacts by name\r\n            <input className={s.seacrhInput} type='text' placeholder='Enter a name' value={value} onChange={changeFilter}/>\r\n    </label>\r\n    )\r\n   \r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    changeFilter: PropTypes.func.isRequired,\r\n}; \r\nexport default Filter;","import React, { useState } from 'react';\r\nimport s from 'components/contactForm/ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        console.log('name:', e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        console.log('number:', e.target.value);\r\n        break;\r\n    }\r\n    // setName(e.currentTarget.value);\r\n    // setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.contactsForm}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.contactsFormBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport s from './App.module.css';\r\nimport { toast, Zoom, Flip, Bounce } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport shortid from 'shortid';\r\nimport ContactList from './components/contactList/ContactList';\r\nimport Filter from './components/filter/Filter';\r\nimport ContactForm from './components/contactForm/ContactForm';\r\n\r\ntoast.configure();\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filters, setFilters] = useState('');\r\n\r\n  const formSubmitHandler = (name, number) => {\r\n    console.log(name, number);\r\n    if (\r\n      contacts.some(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      toast.warn(`${name} is already in your phonebook`, {\r\n        transition: Bounce,\r\n      });\r\n      return;\r\n    }\r\n    const contact = {\r\n      name,\r\n      number,\r\n      id: shortid.generate(),\r\n    };\r\n    setContacts(prevState => [...prevState, contact]);\r\n    console.log(contacts);\r\n    toast.success('The contact is added to the phonebook.', {\r\n      transition: Flip,\r\n    });\r\n  };\r\n\r\n  // switch (data) {\r\n  //   case contacts.some(\r\n  //     ({ name }) => name.toLowerCase() === data.name.toLowerCase(),\r\n  //   ):\r\n  //     toast.warn(`${data.name} is already in your phonebook`, {\r\n  //       transition: Bounce,\r\n  //     });\r\n  //     break;\r\n  //   case\r\n  // }\r\n  useEffect(() => {\r\n    console.log(contacts);\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, []);\r\n\r\n  // formSubmitHandler = data => {\r\n  //   if (\r\n  //     this.state.contacts.some(\r\n  //       ({ name }) => name.toLowerCase() === data.name.toLowerCase(),\r\n  //     )\r\n  //   ) {\r\n  //     toast.warn(`${data.name} is already in your phonebook`, {\r\n  //       transition: Bounce,\r\n  //     });\r\n  //     return;\r\n  //   } else {\r\n  //     this.setState(({ contacts }) => ({\r\n  //       contacts: [\r\n  //         ...contacts,\r\n  //         {\r\n  //           id: shortid.generate(),\r\n  //           ...data,\r\n  //         },\r\n  //       ],\r\n  //     }));\r\n  //     toast.success('The contact is added to the phonebook.', {\r\n  //       transition: Flip,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const contactsForParcing = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contactsForParcing);\r\n    console.log(parsedContacts);\r\n    if (parsedContacts) {\r\n      setContacts(parsedContacts);\r\n    }\r\n  }, []);\r\n  const deleteContact = idContacts => {\r\n    toast('Deleted', { autoClose: 3000, transition: Zoom });\r\n    setContacts(contacts => {\r\n      contacts.filter(({ id }) => {\r\n        return id !== idContacts;\r\n      });\r\n    });\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    return setFilters(e.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    return contacts.filter(contacts =>\r\n      contacts.name.toLowerCase().includes(filters.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={s.mainDiv}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={formSubmitHandler} />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filters} changeFilter={changeFilter} />\r\n      <ContactList data={getVisibleContacts()} deleteContact={deleteContact} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactList_btnDelete__1WNiw\",\"ContactListSpan\":\"ContactList_ContactListSpan__RD9qe\",\"ContactList\":\"ContactList_ContactList__zNOMR\",\"ContactListItem\":\"ContactList_ContactListItem__1OJrL\"};"],"sourceRoot":""}