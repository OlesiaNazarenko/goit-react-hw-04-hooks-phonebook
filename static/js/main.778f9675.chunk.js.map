{"version":3,"sources":["App.module.css","components/filter/Filter.module.css","components/contactList/ContactList.jsx","components/filter/Filter.jsx","components/contactForm/ContactForm.jsx","App.js","index.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css"],"names":["module","exports","ContactList","data","deleteContact","className","s","map","id","name","number","ContactListItem","ContactListSpan","btnDelete","type","onClick","Filter","changeFilter","useState","filter","setFilter","seacrhInput","placeholder","value","onChange","e","inputText","target","ContactForm","onSubmit","setName","setNumber","handleChange","console","log","preventDefault","contactsForm","label","input","autoComplete","pattern","title","required","contactsFormBtn","App","JSON","parse","localStorage","getItem","contacts","setContacts","filters","setFilters","useEffect","window","setItem","stringify","contactsForParcing","parsedContacts","mainDiv","some","contact","toLowerCase","toast","warn","transition","Bounce","shortid","generate","prevState","success","Flip","includes","idContacts","filteredContacts","autoClose","Zoom","configure","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.778f9675.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"App_mainDiv__2WRK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seacrhInput\":\"Filter_seacrhInput__3I0pO\"};","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nfunction ContactList({ data, deleteContact }) {\r\n  return (\r\n    <ul className={s.ContactList}>\r\n      {data.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.ContactListItem}>\r\n            <span className={s.ContactListSpan}>{name}</span>\r\n            <span className={s.ContactListSpan}>{number}</span>\r\n            <button\r\n              key={id}\r\n              className={s.btnDelete}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nfunction Filter({ changeFilter }) {\r\n  const [filter, setFilter] = useState('');\r\n  const handleOnChange = e => {\r\n    const inputText = e.target.value;\r\n    setFilter(inputText);\r\n    changeFilter(inputText);\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={s.seacrhInput}\r\n        type=\"text\"\r\n        placeholder=\"Enter a name\"\r\n        value={filter}\r\n        onChange={handleOnChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport s from 'components/contactForm/ContactForm.module.css';\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        console.log('name:', e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        console.log('number:', e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.contactsForm}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.contactsFormBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nexport default ContactForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport s from './App.module.css';\r\nimport { toast, Zoom, Flip, Bounce } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport shortid from 'shortid';\r\nimport ContactList from './components/contactList/ContactList';\r\nimport Filter from './components/filter/Filter';\r\nimport ContactForm from './components/contactForm/ContactForm';\r\ntoast.configure();\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(() => {\r\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\r\n  });\r\n  const [filters, setFilters] = useState('');\r\n  const formSubmitHandler = (name, number) => {\r\n    if (\r\n      contacts.some(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      toast.warn(`${name} is already in your phonebook`, {\r\n        transition: Bounce,\r\n      });\r\n      return;\r\n    }\r\n    const contact = {\r\n      name,\r\n      number,\r\n      id: shortid.generate(),\r\n    };\r\n    setContacts(prevState => [...prevState, contact]);\r\n    toast.success('The contact is added to the phonebook.', {\r\n      transition: Flip,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    console.log(contacts);\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n  useEffect(() => {\r\n    const contactsForParcing = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contactsForParcing);\r\n    if (parsedContacts) {\r\n      setContacts(parsedContacts);\r\n    }\r\n  }, []);\r\n  const getVisibleContacts = () => {\r\n    return contacts.filter(contacts =>\r\n      contacts.name.toLowerCase().includes(filters.toLowerCase()),\r\n    );\r\n  };\r\n  const deleteContact = idContacts => {\r\n    const filteredContacts = contacts.filter(({ id }) => id !== idContacts);\r\n    setContacts(filteredContacts);\r\n    toast('Deleted', { autoClose: 3000, transition: Zoom });\r\n  };\r\n\r\n  const changeFilter = value => {\r\n    return setFilters(value);\r\n  };\r\n  return (\r\n    <div className={s.mainDiv}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={formSubmitHandler} />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filters} changeFilter={changeFilter} />\r\n      <ContactList data={getVisibleContacts()} deleteContact={deleteContact} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__1pMwp\",\"label\":\"ContactForm_label__2UO_k\",\"input\":\"ContactForm_input__1C0_X\",\"contactsFormBtn\":\"ContactForm_contactsFormBtn__2QdBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactList_btnDelete__1WNiw\",\"ContactListSpan\":\"ContactList_ContactListSpan__RD9qe\",\"ContactList\":\"ContactList_ContactList__zNOMR\",\"ContactListItem\":\"ContactList_ContactListItem__1OJrL\"};"],"sourceRoot":""}